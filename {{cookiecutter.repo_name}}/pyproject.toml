[tool.pytest.ini_options]
addopts = "--cov={{cookiecutter.package_name}} --cov-fail-under={{cookiecutter.min_test_coverage}} -vv --durations=10 --cov-report html --cov-report xml"

[tool.yamlfix]
preserve_quotes = true

[tool.isort]
profile = 'black'
line_length = '{{cookiecutter.line_length}}'

[tool.black]
line-length = '{{cookiecutter.line_length}}'
skip-string-normalization = true

[tool.bandit]
skips = ["B101"]

[tool.flakeheaven]
format = "colored"
# baseline = ".baseline.txt"  # Uncomment this and run `flakeheaven baseline > .baseline.txt` to ignore legacy errors

[tool.flakeheaven.plugins]
wemake-python-styleguide = [
    "+*", "-WPS110", "-WPS111", "-WPS120", "-WPS218", "-WPS232", "-WPS305", "-WPS306", "-WPS326", "-WPS305", "-WPS347",
    "-WPS355", "-WPS358", "-WPS430", "-WPS432", "-WPS462", "-WPS602",
]
flake8-annotations = ["+*", "-ANN101", "-ANN401"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*"]
flake8-comprehensions = ["+*", "-C408"]
#flake8-darglint = ["+*"]
flake8-debugger = ["+*"]
flake8-eradicate = ["+*"]
flake8-quotes = ["+*"]
flake8-rst-docstrings = ["+*"]
flake8-string-format = ["+*"]
flake8-mutable = ["+*"]
flake8-pytest-style = ["+*"]
flake8-spellcheck = ["+*"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-E203", "-W503"]
pyflakes = ["+*"]
#pylint = ["+*"]  # Uncomment if you want to enable pylint and use it on top of the baseline
#flake8-bandit = ["+*"]
#flake8-docstrings = ["+*"]
#flake8-isort = ["+*"]

[tool.pylint.MASTER]
extension-pkg-whitelist = "pydantic"

[tool.pylint.FORMAT]
max-line-length = '{{cookiecutter.line_length}}'
disable = [
    "import-error",  # pre-commit does not give access to full env
    "fixme",
    "logging-format-interpolation",
    "logging-fstring-interpolation",
    "logging-not-lazy",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
]
good-names = [
    "x", "y", "z", "t"
]

[tool.coverage.run]
omit = []

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.",
]

[tool.diff_cover]
compare_branch = "{{cookiecutter.main_branch_name}}"
ignore_whitespace = true
#ignore_unstaged = true
show_uncovered = false
#quiet = true

[tool.ruff]
extend-exclude = [
    ".idea",
    "build-support",
]
line-length = '{{cookiecutter.line_length}}'
indent-width = 4

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "lf"

[tool.ruff.lint]
ignore = []
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]

[tool.ruff.lint.isort]
